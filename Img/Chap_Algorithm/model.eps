%!PS-Adobe-2.0
%%Title: model.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Sep 17 16:00:35 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1080 720 M
5712 0 V
1.000 UL
LTb
1080 720 M
63 0 V
5649 0 R
-63 0 V
936 720 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1080 1728 M
5712 0 V
1.000 UL
LTb
1080 1728 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
1080 2736 M
5712 0 V
1.000 UL
LTb
1080 2736 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
1080 3744 M
5712 0 V
1.000 UL
LTb
1080 3744 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 15) Rshow
1.000 UL
LTb
1.000 UL
LTa
1080 4752 M
5712 0 V
1.000 UL
LTb
1080 4752 M
63 0 V
5649 0 R
-63 0 V
-5793 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
6792 720 M
0 4032 V
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 60) Cshow
1.000 UL
LTb
1.000 UL
LTa
6405 720 M
0 3249 V
0 720 R
0 63 V
1.000 UL
LTb
6405 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 56) Cshow
1.000 UL
LTb
1.000 UL
LTa
6017 720 M
0 3249 V
0 720 R
0 63 V
1.000 UL
LTb
6017 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 52) Cshow
1.000 UL
LTb
1.000 UL
LTa
5630 720 M
0 3249 V
0 720 R
0 63 V
1.000 UL
LTb
5630 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 48) Cshow
1.000 UL
LTb
1.000 UL
LTa
5243 720 M
0 3249 V
0 720 R
0 63 V
1.000 UL
LTb
5243 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 44) Cshow
1.000 UL
LTb
1.000 UL
LTa
4856 720 M
0 4032 V
1.000 UL
LTb
4856 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 40) Cshow
1.000 UL
LTb
1.000 UL
LTa
4468 720 M
0 4032 V
1.000 UL
LTb
4468 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 36) Cshow
1.000 UL
LTb
1.000 UL
LTa
4081 720 M
0 4032 V
1.000 UL
LTb
4081 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 32) Cshow
1.000 UL
LTb
1.000 UL
LTa
3694 720 M
0 4032 V
1.000 UL
LTb
3694 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 28) Cshow
1.000 UL
LTb
1.000 UL
LTa
3307 720 M
0 4032 V
1.000 UL
LTb
3307 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 24) Cshow
1.000 UL
LTb
1.000 UL
LTa
2919 720 M
0 4032 V
1.000 UL
LTb
2919 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTa
2532 720 M
0 4032 V
1.000 UL
LTb
2532 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTa
2145 720 M
0 4032 V
1.000 UL
LTb
2145 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 12) Cshow
1.000 UL
LTb
1.000 UL
LTa
1758 720 M
0 4032 V
1.000 UL
LTb
1758 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 8) Cshow
1.000 UL
LTb
1.000 UL
LTa
1370 720 M
0 4032 V
1.000 UL
LTb
1370 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 4) Cshow
1.000 UL
LTb
1.000 UL
LTa
1080 720 M
0 4032 V
1.000 UL
LTb
1080 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1080 720 M
5712 0 V
0 4032 V
-5712 0 V
0 -4032 V
LTb
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(Time \(seconds\)) Cshow
grestore
LTb
3936 120 M
(tile size) Cshow
1.000 UP
1.600 UP
4.000 UL
LT6
LTb
5721 4569 M
(T1\(x\)) Rshow
LT6
5865 4569 M
639 0 V
1080 4023 M
1370 1488 L
388 -421 V
2145 928 L
387 -68 V
387 -41 V
388 -26 V
387 -19 V
387 -13 V
387 -10 V
388 -7 V
387 -6 V
387 -5 V
387 -3 V
388 -3 V
387 -2 V
1080 4023 CircleF
1370 1488 CircleF
1758 1067 CircleF
2145 928 CircleF
2532 860 CircleF
2919 819 CircleF
3307 793 CircleF
3694 774 CircleF
4081 761 CircleF
4468 751 CircleF
4856 744 CircleF
5243 738 CircleF
5630 733 CircleF
6017 730 CircleF
6405 727 CircleF
6792 725 CircleF
6184 4569 CircleF
1.600 UP
4.000 UL
LT6
LTb
5721 4329 M
(T2\(x\)) Rshow
LT6
5865 4329 M
639 0 V
1080 996 M
290 -16 V
388 -39 V
387 -13 V
387 -5 V
387 -17 V
388 -15 V
387 -15 V
387 -13 V
387 -13 V
388 -11 V
387 -11 V
387 -9 V
387 -8 V
388 -7 V
387 -6 V
1080 996 Star
1370 980 Star
1758 941 Star
2145 928 Star
2532 923 Star
2919 906 Star
3307 891 Star
3694 876 Star
4081 863 Star
4468 850 Star
4856 839 Star
5243 828 Star
5630 819 Star
6017 811 Star
6405 804 Star
6792 798 Star
6184 4329 Star
1.600 UP
4.000 UL
LT6
LTb
5721 4089 M
(T\(x\)) Rshow
LT6
5865 4089 M
639 0 V
1080 4300 M
1370 1749 L
388 -613 V
387 -80 V
387 57 V
387 49 V
388 53 V
387 57 V
387 62 V
387 66 V
388 71 V
387 75 V
387 171 V
387 87 V
388 92 V
387 95 V
1080 4300 Pls
1370 1749 Pls
1758 1136 Pls
2145 1056 Pls
2532 1113 Pls
2919 1162 Pls
3307 1215 Pls
3694 1272 Pls
4081 1334 Pls
4468 1400 Pls
4856 1471 Pls
5243 1546 Pls
5630 1717 Pls
6017 1804 Pls
6405 1896 Pls
6792 1991 Pls
6184 4089 Pls
1.000 UL
LTb
1080 720 M
5712 0 V
0 4032 V
-5712 0 V
0 -4032 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
